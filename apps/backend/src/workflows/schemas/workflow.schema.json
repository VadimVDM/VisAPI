{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Workflow Schema",
  "description": "Schema for validating workflow definitions",
  "required": ["name", "triggers", "steps", "enabled"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "Unique identifier for the workflow"
    },
    "name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "description": "Human-readable name for the workflow"
    },
    "description": {
      "type": "string",
      "maxLength": 500,
      "description": "Optional description of the workflow"
    },
    "enabled": {
      "type": "boolean",
      "description": "Whether the workflow is active"
    },
    "variables": {
      "type": "object",
      "additionalProperties": true,
      "description": "Global variables available to all steps"
    },
    "triggers": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/trigger"
      },
      "description": "Array of trigger configurations"
    },
    "steps": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/step"
      },
      "description": "Array of workflow steps"
    }
  },
  "definitions": {
    "trigger": {
      "type": "object",
      "required": ["type", "config"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["webhook", "cron", "manual"],
          "description": "Type of trigger"
        },
        "config": {
          "type": "object",
          "properties": {
            "schedule": {
              "type": "string",
              "description": "Cron expression for scheduling"
            },
            "timezone": {
              "type": "string",
              "description": "Timezone for cron execution"
            },
            "endpoint": {
              "type": "string",
              "description": "Webhook endpoint identifier"
            }
          },
          "additionalProperties": true
        }
      }
    },
    "step": {
      "type": "object",
      "required": ["id", "type", "config"],
      "properties": {
        "id": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9_-]+$",
          "minLength": 1,
          "maxLength": 50,
          "description": "Unique identifier for the step within the workflow"
        },
        "type": {
          "type": "string",
          "enum": ["slack.send", "whatsapp.send", "pdf.generate", "email.send"],
          "description": "Type of action to perform"
        },
        "config": {
          "type": "object",
          "properties": {
            "channel": {
              "type": "string",
              "description": "Slack channel identifier"
            },
            "message": {
              "type": "string",
              "description": "Message content"
            },
            "template": {
              "type": "string",
              "description": "Template identifier for message"
            },
            "contact": {
              "type": "string",
              "pattern": "^\\+[1-9]\\d{1,14}$",
              "description": "WhatsApp contact number in E.164 format"
            },
            "variables": {
              "type": "object",
              "additionalProperties": true,
              "description": "Template variables"
            },
            "data": {
              "type": "object",
              "additionalProperties": true,
              "description": "Data for PDF generation"
            },
            "recipient": {
              "type": "string",
              "format": "email",
              "description": "Email recipient"
            },
            "subject": {
              "type": "string",
              "description": "Email subject"
            }
          },
          "additionalProperties": true
        },
        "retries": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "default": 3,
          "description": "Number of retry attempts"
        },
        "timeout": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 300000,
          "default": 30000,
          "description": "Step timeout in milliseconds"
        }
      }
    }
  }
}
