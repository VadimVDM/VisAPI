{
  "name": "VisAPI",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "migrate:up": "echo 'Running database migrations...' && for f in migrations/*.sql; do echo \"Applying $f\"; done",
    "migrate:status": "echo 'Checking migration status...'",
    "migrate:create": "echo 'Creating new migration...'",
    "regenerate:types": "node scripts/regenerate-types.js",
    "build": "nx run-many --target=build --projects=frontend,backend,worker --parallel",
    "test": "nx run-many --target=test --all --parallel",
    "lint": "nx run-many --target=lint --all --parallel --maxParallel=2",
    "lint:backend": "nx run backend:lint",
    "lint:worker": "nx run worker:lint",
    "lint:backend:prod": "echo 'Checking production code quality (excluding test files)...' && nx lint backend 2>&1 | grep -v '.spec.ts' | grep -v '.test.ts' | grep -E '(error|warning)' || echo '✅ No issues in production code!'",
    "lint:frontend": "nx run frontend:lint",
    "lint:ci": "pnpm lint:backend:ci; pnpm lint:frontend:ci",
    "lint:backend:ci": "nx run backend:lint || echo 'Backend linting completed with issues'",
    "lint:frontend:ci": "nx run frontend:lint || echo 'Frontend linting completed with issues'",
    "format": "nx format",
    "format:backend": "nx format:write --projects=backend",
    "format:worker": "nx format:write --projects=worker",
    "format:frontend": "nx format:write --projects=frontend",
    "format:check": "nx format:check",
    "format:check:backend": "nx format:check --projects=backend",
    "format:check:worker": "nx format:check --projects=worker",
    "format:check:frontend": "nx format:check --projects=frontend",
    "security:backend": ".venv/bin/bandit -r apps/backend -f screen 2>/dev/null || echo '⚠️  Bandit not installed. Run: make python-setup'",
    "security:backend:strict": ".venv/bin/bandit -r apps/backend -lll -f screen 2>/dev/null || echo '⚠️  Bandit not installed. Run: make python-setup'",
    "dev": "nx run-many --target=dev --all --parallel",
    "dev:frontend": "nx dev frontend",
    "dev:backend": "nx serve backend",
    "dev:worker": "nx serve worker",
    "build:frontend": "nx build frontend",
    "build:backend": "nx build backend",
    "build:backend:tsup": "tsup --config apps/backend/tsup.config.ts",
    "build:worker": "nx build worker",
    "test:frontend": "nx test frontend",
    "test:backend": "nx test backend",
    "test:backend:serial": "NODE_OPTIONS='--max-old-space-size=1024' nx test backend -- --runInBand",
    "test:backend:watch": "nx test backend -- --watch --maxWorkers=1",
    "test:backend:light": "NODE_OPTIONS='--max-old-space-size=1024' nx test backend -- --maxWorkers=2 --workerIdleMemoryLimit=512MB",
    "test:backend:file": "nx test backend -- --testPathPattern",
    "test:backend:coverage": "nx test backend -- --coverage --maxWorkers=2",
    "typecheck": "nx run-many --target=typecheck --all --parallel",
    "typecheck:backend": "tsc --noEmit -p apps/backend/tsconfig.app.json",
    "typecheck:worker": "tsc --noEmit -p apps/worker/tsconfig.app.json",
    "typecheck:frontend": "tsc --noEmit -p apps/frontend/tsconfig.json",
    "precommit": "./scripts/pre-commit-backend.sh",
    "e2e:frontend": "nx e2e frontend-e2e",
    "e2e:backend": "nx e2e backend-e2e",
    "load:smoke": "BASE_URL=https://api.visanet.app k6 run load-tests/smoke-test.js",
    "load:smoke:local": "k6 run load-tests/smoke-test.js",
    "load:full": "k6 run load-tests/visa-workflow-load-test.js",
    "load:s4-qa-01": "k6 run load-tests/s4-qa-01-load-test.js",
    "load:s4-qa-01-pdf": "k6 run load-tests/s4-qa-01-pdf-batch-test.js",
    "load:performance-suite": "k6 run load-tests/performance-suite.js",
    "load:s4-qa-01-dev": "NODE_ENV=development k6 run load-tests/s4-qa-01-load-test.js",
    "load:s4-qa-01-staging": "NODE_ENV=staging BASE_URL=https://staging-api.visanet.app k6 run load-tests/s4-qa-01-load-test.js",
    "load:s4-qa-01-production": "NODE_ENV=production BASE_URL=https://api.visanet.app k6 run load-tests/s4-qa-01-load-test.js",
    "load:pdf-batch-dev": "NODE_ENV=development k6 run load-tests/s4-qa-01-pdf-batch-test.js",
    "load:pdf-batch-staging": "NODE_ENV=staging BASE_URL=https://staging-api.visanet.app k6 run load-tests/s4-qa-01-pdf-batch-test.js",
    "load:pdf-batch-production": "NODE_ENV=production BASE_URL=https://api.visanet.app k6 run load-tests/s4-qa-01-pdf-batch-test.js",
    "load:suite-dev": "NODE_ENV=development k6 run load-tests/performance-suite.js",
    "load:suite-staging": "NODE_ENV=staging BASE_URL=https://staging-api.visanet.app k6 run load-tests/performance-suite.js",
    "load:suite-production": "NODE_ENV=production BASE_URL=https://api.visanet.app k6 run load-tests/performance-suite.js",
    "load:suite-smoke-only": "RUN_SMOKE_ONLY=true k6 run load-tests/performance-suite.js",
    "load:suite-load-only": "RUN_LOAD_ONLY=true k6 run load-tests/performance-suite.js",
    "load:suite-pdf-only": "RUN_PDF_ONLY=true k6 run load-tests/performance-suite.js",
    "lighthouse:accessibility": "lhci autorun --config=.lighthouserc.json",
    "lighthouse:accessibility:ci": "lhci autorun --upload.target=temporary-public-storage",
    "lighthouse:accessibility:simple": "lhci autorun --config=.lighthouserc.json --numberOfRuns=1",
    "test:accessibility": "pnpm lighthouse:accessibility:simple",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "setup": "pnpm install && pnpm docker:up",
    "clean": "nx reset",
    "create-admin-key": "nx run backend:create-admin-key",
    "bootstrap-completed-tracker": "node apps/backend/src/scripts/bootstrap-completed-tracker.js",
    "test-proxy": "npx ts-node apps/worker/src/scripts/test-proxy-connection.ts",
    "docker:build:backend": "docker build -f apps/backend/Dockerfile -t visapi-backend:latest .",
    "docker:build:backend:prod": "NODE_ENV=production docker build -f apps/backend/Dockerfile -t visapi-backend:prod --build-arg NODE_ENV=production .",
    "docker:run:backend": "docker run -p 3000:3000 --env-file .env.backend visapi-backend:latest",
    "docker:size": "docker images visapi-backend --format 'table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}'",
    "docker:test:backend": "docker build -f apps/backend/Dockerfile --target builder -t visapi-backend-test . && docker run --rm visapi-backend-test pnpm nx test backend",
    "prepare": "husky"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "packageManager": "pnpm@10.15.1",
  "devDependencies": {
    "@babel/core": "^7.28.4",
    "@babel/preset-react": "^7.27.1",
    "@lhci/cli": "^0.15.1",
    "@nestjs/schematics": "^11.0.8",
    "@nestjs/testing": "^11.1.6",
    "@nx/devkit": "21.6.3",
    "@nx/eslint-plugin": "21.6.3",
    "@nx/jest": "21.6.3",
    "@nx/js": "21.6.3",
    "@nx/nest": "21.6.3",
    "@nx/next": "21.6.3",
    "@nx/node": "21.6.3",
    "@nx/playwright": "21.6.3",
    "@nx/react": "21.6.3",
    "@nx/vite": "21.6.3",
    "@nx/web": "21.6.3",
    "@nx/webpack": "21.6.3",
    "@nx/workspace": "21.6.3",
    "@playwright/test": "^1.55.1",
    "@supabase/supabase-js": "^2.58.0",
    "@swc-node/register": "~1.11.1",
    "@swc/cli": "~0.7.8",
    "@swc/core": "~1.13.20",
    "@swc/helpers": "~0.5.17",
    "@tailwindcss/postcss": "^4.1.14",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.6.2",
    "@types/passport": "^1.0.17",
    "@types/react": "19.2.0",
    "@types/react-dom": "19.2.0",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.46.0",
    "@vitejs/plugin-react": "^5.0.4",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.37.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "husky": "^9.1.7",
    "jest": "^30.2.0",
    "jest-environment-node": "^30.2.0",
    "jest-util": "^30.2.0",
    "jsdom": "^27.0.0",
    "lighthouse": "^12.8.2",
    "lint-staged": "^16.2.3",
    "nx": "21.6.3",
    "playwright": "^1.55.1",
    "prettier": "^3.6.2",
    "tailwindcss-animate": "^1.0.7",
    "ts-jest": "^29.4.4",
    "ts-node": "10.9.2",
    "tslib": "^2.8.1",
    "tsup": "^8.5.0",
    "typescript": "~5.9.3",
    "vite": "^7.1.9",
    "vitest": "^3.2.4",
    "webpack-cli": "^6.0.1"
  },
  "nx": {},
  "dependencies": {
    "@2captcha/captcha-solver": "^1.3.0",
    "@bull-board/api": "^6.13.0",
    "@bull-board/express": "^6.13.0",
    "@fastify/cors": "^11.1.0",
    "@fastify/helmet": "^13.0.2",
    "@fastify/static": "^8.2.0",
    "@hookform/resolvers": "^5.2.2",
    "@nest-lab/throttler-storage-redis": "^1.1.0",
    "@nestjs/axios": "^4.0.1",
    "@nestjs/bullmq": "^11.0.3",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/cqrs": "^11.0.3",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/platform-fastify": "^11.1.6",
    "@nestjs/schedule": "^6.0.1",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/throttler": "^6.4.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.64.6",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.205.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.205.0",
    "@opentelemetry/instrumentation-http": "^0.205.0",
    "@opentelemetry/instrumentation-ioredis": "^0.53.3",
    "@opentelemetry/instrumentation-nestjs-core": "^0.52.2",
    "@opentelemetry/resources": "^2.1.0",
    "@opentelemetry/sdk-metrics": "^2.1.0",
    "@opentelemetry/sdk-node": "^0.205.0",
    "@opentelemetry/sdk-trace-node": "^2.1.0",
    "@opentelemetry/semantic-conventions": "^1.37.0",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@sentry/nestjs": "^10.17.0",
    "@supabase/auth-ui-react": "^0.4.7",
    "@supabase/auth-ui-shared": "^0.1.8",
    "@tailwindcss/forms": "^0.5.10",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1",
    "axios": "^1.12.2",
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "bullmq": "^5.60.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "express": "^5.1.0",
    "fastify": "^5.6.1",
    "framer-motion": "^12.23.22",
    "handlebars": "^4.7.8",
    "helmet": "^8.1.0",
    "ioredis": "^5.8.0",
    "lucide-react": "^0.544.0",
    "nanoid": "^5.1.6",
    "nestjs-pino": "^4.4.1",
    "next": "~15.5.4",
    "next-themes": "^0.4.6",
    "passport": "^0.7.0",
    "passport-headerapikey": "^1.2.2",
    "pino": "^10.0.0",
    "pino-pretty": "^13.1.1",
    "prom-client": "^15.1.3",
    "prometheus-remote-write": "^0.5.1",
    "puppeteer-core": "^24.23.0",
    "react": "19.2.0",
    "react-dom": "19.2.0",
    "react-hook-form": "^7.64.0",
    "recharts": "^3.2.1",
    "reflect-metadata": "^0.2.2",
    "resend": "^6.1.2",
    "rxjs": "^7.8.2",
    "snappy": "^7.3.3",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.14",
    "zod": "^4.1.11"
  },
  "pnpm": {
    "overrides": {
      "glob@<8.0.0": "^10.4.5",
      "inflight": "npm:noop2@^2.0.0"
    }
  }
}
