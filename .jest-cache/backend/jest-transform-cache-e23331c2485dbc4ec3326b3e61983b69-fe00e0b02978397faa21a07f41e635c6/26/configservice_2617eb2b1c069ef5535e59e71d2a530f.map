{"file":"/Users/vadim/Projects/VisAPI/libs/backend/core-config/src/lib/config.service.ts","mappings":"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","names":[],"sources":["/Users/vadim/Projects/VisAPI/libs/backend/core-config/src/lib/config.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { ConfigService as NestConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ConfigService {\n  constructor(private configService: NestConfigService) {}\n\n  get nodeEnv(): string {\n    return this.configService.get<string>('node.env');\n  }\n\n  get isDevelopment(): boolean {\n    return this.nodeEnv === 'development';\n  }\n\n  get isProduction(): boolean {\n    return this.nodeEnv === 'production';\n  }\n\n  get port(): number {\n    return this.configService.get<number>('port');\n  }\n\n  get corsOrigin(): string[] {\n    return this.configService.get<string[]>('cors.origin');\n  }\n\n  get databaseUrl(): string {\n    return this.configService.get<string>('database.url');\n  }\n\n  get redisUrl(): string {\n    return this.configService.get<string>('redis.url');\n  }\n\n  get supabaseUrl(): string {\n    return this.configService.get<string>('supabase.url');\n  }\n\n  get supabaseServiceRoleKey(): string {\n    return this.configService.get<string>('supabase.serviceRoleKey');\n  }\n\n  get supabaseAnonKey(): string {\n    return this.configService.get<string>('supabase.anonKey');\n  }\n\n  get jwtSecret(): string {\n    return this.configService.get<string>('auth.jwtSecret');\n  }\n\n  get apiKeyPrefix(): string {\n    return this.configService.get<string>('auth.apiKeyPrefix');\n  }\n\n  get apiKeyExpiryDays(): number {\n    return this.configService.get<number>('auth.apiKeyExpiryDays');\n  }\n\n  get rateLimitBurst(): number {\n    return this.configService.get<number>('rateLimit.burst');\n  }\n\n  get rateLimitSustained(): number {\n    return this.configService.get<number>('rateLimit.sustained');\n  }\n\n  get queueConcurrency(): number {\n    return this.configService.get<number>('queue.concurrency');\n  }\n\n  get queueMaxRetries(): number {\n    return this.configService.get<number>('queue.maxRetries');\n  }\n\n  get queueRetryDelay(): number {\n    return this.configService.get<number>('queue.retryDelay');\n  }\n\n  get logLevel(): string {\n    return this.configService.get<string>('logging.level');\n  }\n\n  get logFormat(): string {\n    return this.configService.get<string>('logging.format');\n  }\n\n  get slackWebhookUrl(): string {\n    return this.configService.get<string>('slack.webhookUrl');\n  }\n\n  get slackBotToken(): string {\n    return this.configService.get<string>('slack.botToken');\n  }\n\n  get slackSigningSecret(): string {\n    return this.configService.get<string>('slack.signingSecret');\n  }\n\n  get slackDefaultChannel(): string {\n    return this.configService.get<string>('slack.defaultChannel');\n  }\n\n  get slackEnabled(): boolean {\n    return this.configService.get<boolean>('slack.enabled');\n  }\n}\n"],"version":3}