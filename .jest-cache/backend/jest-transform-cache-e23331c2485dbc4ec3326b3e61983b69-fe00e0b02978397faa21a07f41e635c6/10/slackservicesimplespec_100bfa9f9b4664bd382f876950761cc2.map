{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/notifications/slack.service.simple.spec.ts","mappings":";;;AAAA,6CAAsD;AACtD,yCAA4C;AAC5C,qDAAoD;AACpD,mDAA+C;AAC/C,+BAA0B;AAG1B,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,OAAqB,CAAC;IAE1B,UAAU,CAAC,GAAS,EAAE;QACpB,MAAM,MAAM,GAAkB,MAAM,cAAI,CAAC,mBAAmB,CAAC;YAC3D,SAAS,EAAE;gBACT,4BAAY;gBACZ;oBACE,OAAO,EAAE,mBAAW;oBACpB,QAAQ,EAAE;wBACR,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,IAAA,SAAE,EAAC,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;qBAC5D;iBACF;gBACD;oBACE,OAAO,EAAE,2BAAa;oBACtB,QAAQ,EAAE;wBACR,YAAY,EAAE,IAAI;wBAClB,eAAe,EAAE,+CAA+C;wBAChE,mBAAmB,EAAE,SAAS;wBAC9B,kBAAkB,EAAE,aAAa;qBAClC;iBACF;gBACD;oBACE,OAAO,EAAE,cAAc,4BAAY,CAAC,IAAI,EAAE;oBAC1C,QAAQ,EAAE;wBACR,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;wBAChB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;wBACf,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;wBAChB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;qBAChB;iBACF;aACF;SACF,CAAC,CAAC,OAAO,EAAE,CAAC;QAEb,OAAO,GAAG,MAAM,CAAC,GAAG,CAAe,4BAAY,CAAC,CAAC;IACnD,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC3B,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAS,EAAE;QACxC,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QAC7D,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,gBAAgB;IAClD,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/notifications/slack.service.simple.spec.ts"],"sourcesContent":["import { Test, TestingModule } from '@nestjs/testing';\nimport { HttpService } from '@nestjs/axios';\nimport { ConfigService } from '@visapi/core-config';\nimport { SlackService } from './slack.service';\nimport { of } from 'rxjs';\nimport { PinoLogger } from 'nestjs-pino';\n\ndescribe('SlackService - Simple', () => {\n  let service: SlackService;\n\n  beforeEach(async () => {\n    const module: TestingModule = await Test.createTestingModule({\n      providers: [\n        SlackService,\n        {\n          provide: HttpService,\n          useValue: {\n            post: jest.fn().mockReturnValue(of({ data: { ok: true } })),\n          },\n        },\n        {\n          provide: ConfigService,\n          useValue: {\n            slackEnabled: true,\n            slackWebhookUrl: 'https://hooks.slack.com/services/test/webhook',\n            slackDefaultChannel: '#alerts',\n            slackSigningSecret: 'test-secret',\n          },\n        },\n        {\n          provide: `PinoLogger:${SlackService.name}`,\n          useValue: {\n            debug: jest.fn(),\n            info: jest.fn(),\n            error: jest.fn(),\n            warn: jest.fn(),\n          },\n        },\n      ],\n    }).compile();\n\n    service = module.get<SlackService>(SlackService);\n  });\n\n  it('should be defined', () => {\n    expect(service).toBeDefined();\n  });\n\n  it('should send custom alert', async () => {\n    const result = await service.sendCustomAlert('Test message');\n    expect(result).toBeUndefined(); // void function\n  });\n});"],"version":3}