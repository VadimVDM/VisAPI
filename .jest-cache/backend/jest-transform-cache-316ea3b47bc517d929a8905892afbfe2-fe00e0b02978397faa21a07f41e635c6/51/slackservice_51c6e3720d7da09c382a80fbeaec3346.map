{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/notifications/slack.service.ts","mappings":"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","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/notifications/slack.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { InjectPinoLogger, PinoLogger } from 'nestjs-pino';\nimport { ConfigService } from '@visapi/core-config';\nimport {\n  GrafanaWebhookPayload,\n  SlackMessage,\n  SlackAttachment,\n  SlackField,\n} from '@visapi/shared-types';\nimport { HttpService } from '@nestjs/axios';\nimport { firstValueFrom } from 'rxjs';\n\n@Injectable()\nexport class SlackService {\n\n  constructor(\n    @InjectPinoLogger(SlackService.name)\n    private readonly logger: PinoLogger,\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService\n  ) {}\n\n  async sendGrafanaAlert(payload: GrafanaWebhookPayload): Promise<void> {\n    if (!this.configService.slackEnabled) {\n      this.logger.debug('Slack integration disabled, skipping alert');\n      return;\n    }\n\n    const webhookUrl = this.configService.slackWebhookUrl;\n    if (!webhookUrl) {\n      this.logger.error('Slack webhook URL not configured');\n      return;\n    }\n\n    try {\n      const slackMessage = this.formatGrafanaAlert(payload);\n      \n      this.logger.debug('Sending Slack alert', {\n        ruleName: payload.ruleName,\n        state: payload.state,\n        channel: slackMessage.channel,\n      });\n\n      await firstValueFrom(\n        this.httpService.post(webhookUrl, slackMessage, {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          timeout: 10000,\n        })\n      );\n\n      this.logger.info('Slack alert sent successfully', {\n        ruleName: payload.ruleName,\n        state: payload.state,\n      });\n    } catch (error) {\n      this.logger.error('Failed to send Slack alert', {\n        error: error.message,\n        ruleName: payload.ruleName,\n        state: payload.state,\n      });\n      throw error;\n    }\n  }\n\n  private formatGrafanaAlert(payload: GrafanaWebhookPayload): SlackMessage {\n    const severity = this.getAlertSeverity(payload.state);\n    const color = this.getAlertColor(payload.state);\n    const emoji = this.getAlertEmoji(payload.state);\n\n    const fields: SlackField[] = [\n      {\n        title: 'Status',\n        value: `${emoji} ${payload.state.toUpperCase()}`,\n        short: true,\n      },\n      {\n        title: 'Rule',\n        value: payload.ruleName,\n        short: true,\n      },\n    ];\n\n    if (payload.dashboardId) {\n      fields.push({\n        title: 'Dashboard ID',\n        value: payload.dashboardId.toString(),\n        short: true,\n      });\n    }\n\n    if (payload.panelId) {\n      fields.push({\n        title: 'Panel ID',\n        value: payload.panelId.toString(),\n        short: true,\n      });\n    }\n\n    // Add evaluation matches if available\n    if (payload.evalMatches && payload.evalMatches.length > 0) {\n      const metrics = payload.evalMatches\n        .map((match) => `${match.metric}: ${match.value}`)\n        .join('\\n');\n      \n      fields.push({\n        title: 'Metrics',\n        value: metrics,\n        short: false,\n      });\n    }\n\n    // Add tags if available\n    if (payload.tags && Object.keys(payload.tags).length > 0) {\n      const tags = Object.entries(payload.tags)\n        .map(([key, value]) => `${key}: ${value}`)\n        .join('\\n');\n      \n      fields.push({\n        title: 'Tags',\n        value: tags,\n        short: false,\n      });\n    }\n\n    const attachment: SlackAttachment = {\n      color,\n      pretext: `${severity} Alert: ${payload.title}`,\n      title: payload.ruleName,\n      title_link: payload.ruleUrl,\n      text: payload.message,\n      fields,\n      footer: 'VisAPI Monitoring',\n      footer_icon: 'https://grafana.com/static/img/about/grafana_logo_swirl-events.svg',\n      ts: Math.floor(Date.now() / 1000),\n      mrkdwn_in: ['text', 'pretext'],\n    };\n\n    // Add image if available\n    if (payload.imageUrl) {\n      attachment.image_url = payload.imageUrl;\n    }\n\n    const message: SlackMessage = {\n      channel: this.configService.slackDefaultChannel,\n      username: 'VisAPI Monitoring',\n      icon_emoji: ':chart_with_upwards_trend:',\n      text: this.buildAlertText(payload),\n      attachments: [attachment],\n    };\n\n    return message;\n  }\n\n  private buildAlertText(payload: GrafanaWebhookPayload): string {\n    const emoji = this.getAlertEmoji(payload.state);\n    \n    let text = `${emoji} *${payload.state.toUpperCase()}*: ${payload.title}`;\n    \n    if (payload.state === 'alerting') {\n      text += '\\n:warning: *Action may be required*';\n    } else if (payload.state === 'ok') {\n      text += '\\n:white_check_mark: *Issue resolved*';\n    }\n\n    return text;\n  }\n\n  private getAlertSeverity(state: string): string {\n    switch (state) {\n      case 'alerting':\n        return 'CRITICAL';\n      case 'no_data':\n        return 'WARNING';\n      case 'paused':\n        return 'INFO';\n      case 'pending':\n        return 'INFO';\n      case 'ok':\n        return 'OK';\n      default:\n        return 'UNKNOWN';\n    }\n  }\n\n  private getAlertColor(state: string): string {\n    switch (state) {\n      case 'alerting':\n        return 'danger';\n      case 'no_data':\n        return 'warning';\n      case 'paused':\n        return '#808080'; // Gray\n      case 'pending':\n        return '#FFA500'; // Orange\n      case 'ok':\n        return 'good';\n      default:\n        return '#808080'; // Gray\n    }\n  }\n\n  private getAlertEmoji(state: string): string {\n    switch (state) {\n      case 'alerting':\n        return ':red_circle:';\n      case 'no_data':\n        return ':yellow_circle:';\n      case 'paused':\n        return ':pause_button:';\n      case 'pending':\n        return ':clock1:';\n      case 'ok':\n        return ':green_circle:';\n      default:\n        return ':grey_question:';\n    }\n  }\n\n  async sendCustomAlert(\n    message: string,\n    severity: 'info' | 'warning' | 'error' = 'info',\n    channel?: string\n  ): Promise<void> {\n    if (!this.configService.slackEnabled) {\n      this.logger.debug('Slack integration disabled, skipping custom alert');\n      return;\n    }\n\n    const webhookUrl = this.configService.slackWebhookUrl;\n    if (!webhookUrl) {\n      this.logger.error('Slack webhook URL not configured');\n      return;\n    }\n\n    const color = severity === 'error' ? 'danger' : severity === 'warning' ? 'warning' : 'good';\n    const emoji = severity === 'error' ? ':red_circle:' : severity === 'warning' ? ':warning:' : ':information_source:';\n\n    const slackMessage: SlackMessage = {\n      channel: channel || this.configService.slackDefaultChannel,\n      username: 'VisAPI System',\n      icon_emoji: ':robot_face:',\n      text: `${emoji} ${message}`,\n      attachments: [\n        {\n          color,\n          text: message,\n          footer: 'VisAPI System',\n          ts: Math.floor(Date.now() / 1000),\n        },\n      ],\n    };\n\n    try {\n      await firstValueFrom(\n        this.httpService.post(webhookUrl, slackMessage, {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          timeout: 10000,\n        })\n      );\n\n      this.logger.info('Custom Slack alert sent successfully', {\n        severity,\n        channel: channel || this.configService.slackDefaultChannel,\n      });\n    } catch (error) {\n      this.logger.error('Failed to send custom Slack alert', {\n        error: error.message,\n        severity,\n        message,\n      });\n      throw error;\n    }\n  }\n\n  async validateWebhookSignature(\n    payload: string,\n    timestamp: string,\n    signature: string\n  ): Promise<boolean> {\n    const signingSecret = this.configService.slackSigningSecret;\n    if (!signingSecret) {\n      this.logger.warn('Slack signing secret not configured, skipping signature validation');\n      return true; // Allow if no secret configured\n    }\n\n    try {\n      const crypto = require('crypto');\n      const basestring = `v0:${timestamp}:${payload}`;\n      const mySignature = 'v0=' + crypto\n        .createHmac('sha256', signingSecret)\n        .update(basestring)\n        .digest('hex');\n\n      // Use timing-safe comparison\n      return crypto.timingSafeEqual(\n        Buffer.from(signature, 'utf8'),\n        Buffer.from(mySignature, 'utf8')\n      );\n    } catch (error) {\n      this.logger.error('Failed to validate webhook signature', {\n        error: error.message,\n      });\n      return false;\n    }\n  }\n}"],"version":3}