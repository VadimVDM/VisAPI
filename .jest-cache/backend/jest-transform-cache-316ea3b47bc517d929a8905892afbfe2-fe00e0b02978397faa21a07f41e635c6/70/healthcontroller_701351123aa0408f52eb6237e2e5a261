c1897aab410259dc40e76b22b98d63bb
"use strict";
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HealthController = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@nestjs/common");
const terminus_1 = require("@nestjs/terminus");
const supabase_health_1 = require("./indicators/supabase.health");
const redis_health_1 = require("./indicators/redis.health");
let HealthController = class HealthController {
    constructor(health, supabaseHealth, redisHealth) {
        this.health = health;
        this.supabaseHealth = supabaseHealth;
        this.redisHealth = redisHealth;
    }
    check() {
        return this.health.check([
            () => this.supabaseHealth.isHealthy('database'),
            () => this.redisHealth.isHealthy('redis'),
        ]);
    }
    liveness() {
        return {
            status: 'ok',
            timestamp: new Date().toISOString(),
        };
    }
};
exports.HealthController = HealthController;
tslib_1.__decorate([
    (0, common_1.Get)(),
    (0, terminus_1.HealthCheck)(),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", typeof (_d = typeof Promise !== "undefined" && Promise) === "function" ? _d : Object)
], HealthController.prototype, "check", null);
tslib_1.__decorate([
    (0, common_1.Get)('liveness'),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], HealthController.prototype, "liveness", null);
exports.HealthController = HealthController = tslib_1.__decorate([
    (0, common_1.Controller)('health'),
    tslib_1.__metadata("design:paramtypes", [typeof (_a = typeof terminus_1.HealthCheckService !== "undefined" && terminus_1.HealthCheckService) === "function" ? _a : Object, typeof (_b = typeof supabase_health_1.SupabaseHealthIndicator !== "undefined" && supabase_health_1.SupabaseHealthIndicator) === "function" ? _b : Object, typeof (_c = typeof redis_health_1.RedisHealthIndicator !== "undefined" && redis_health_1.RedisHealthIndicator) === "function" ? _c : Object])
], HealthController);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3ZhZGltL1Byb2plY3RzL1Zpc0FQSS9hcHBzL2JhY2tlbmQvc3JjL2hlYWx0aC9oZWFsdGguY29udHJvbGxlci50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLDJDQUFpRDtBQUNqRCwrQ0FJMEI7QUFDMUIsa0VBQXVFO0FBQ3ZFLDREQUFpRTtBQUcxRCxJQUFNLGdCQUFnQixHQUF0QixNQUFNLGdCQUFnQjtJQUMzQixZQUNVLE1BQTBCLEVBQzFCLGNBQXVDLEVBQ3ZDLFdBQWlDO1FBRmpDLFdBQU0sR0FBTixNQUFNLENBQW9CO1FBQzFCLG1CQUFjLEdBQWQsY0FBYyxDQUF5QjtRQUN2QyxnQkFBVyxHQUFYLFdBQVcsQ0FBc0I7SUFDeEMsQ0FBQztJQUlKLEtBQUs7UUFDSCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztZQUMvQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUM7U0FDMUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUdELFFBQVE7UUFDTixPQUFPO1lBQ0wsTUFBTSxFQUFFLElBQUk7WUFDWixTQUFTLEVBQUUsSUFBSSxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUU7U0FDcEMsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFBO0FBdkJZLDRDQUFnQjtBQVMzQjtJQUZDLElBQUEsWUFBRyxHQUFFO0lBQ0wsSUFBQSxzQkFBVyxHQUFFOzs7Z0VBQ0wsT0FBTyxvQkFBUCxPQUFPOzZDQUtmO0FBR0Q7SUFEQyxJQUFBLFlBQUcsRUFBQyxVQUFVLENBQUM7Ozs7Z0RBTWY7MkJBdEJVLGdCQUFnQjtJQUQ1QixJQUFBLG1CQUFVLEVBQUMsUUFBUSxDQUFDO2lFQUdELDZCQUFrQixvQkFBbEIsNkJBQWtCLG9EQUNWLHlDQUF1QixvQkFBdkIseUNBQXVCLG9EQUMxQixtQ0FBb0Isb0JBQXBCLG1DQUFvQjtHQUpoQyxnQkFBZ0IsQ0F1QjVCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy92YWRpbS9Qcm9qZWN0cy9WaXNBUEkvYXBwcy9iYWNrZW5kL3NyYy9oZWFsdGgvaGVhbHRoLmNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udHJvbGxlciwgR2V0IH0gZnJvbSAnQG5lc3Rqcy9jb21tb24nO1xuaW1wb3J0IHtcbiAgSGVhbHRoQ2hlY2ssXG4gIEhlYWx0aENoZWNrU2VydmljZSxcbiAgSGVhbHRoQ2hlY2tSZXN1bHQsXG59IGZyb20gJ0BuZXN0anMvdGVybWludXMnO1xuaW1wb3J0IHsgU3VwYWJhc2VIZWFsdGhJbmRpY2F0b3IgfSBmcm9tICcuL2luZGljYXRvcnMvc3VwYWJhc2UuaGVhbHRoJztcbmltcG9ydCB7IFJlZGlzSGVhbHRoSW5kaWNhdG9yIH0gZnJvbSAnLi9pbmRpY2F0b3JzL3JlZGlzLmhlYWx0aCc7XG5cbkBDb250cm9sbGVyKCdoZWFsdGgnKVxuZXhwb3J0IGNsYXNzIEhlYWx0aENvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGhlYWx0aDogSGVhbHRoQ2hlY2tTZXJ2aWNlLFxuICAgIHByaXZhdGUgc3VwYWJhc2VIZWFsdGg6IFN1cGFiYXNlSGVhbHRoSW5kaWNhdG9yLFxuICAgIHByaXZhdGUgcmVkaXNIZWFsdGg6IFJlZGlzSGVhbHRoSW5kaWNhdG9yXG4gICkge31cblxuICBAR2V0KClcbiAgQEhlYWx0aENoZWNrKClcbiAgY2hlY2soKTogUHJvbWlzZTxIZWFsdGhDaGVja1Jlc3VsdD4ge1xuICAgIHJldHVybiB0aGlzLmhlYWx0aC5jaGVjayhbXG4gICAgICAoKSA9PiB0aGlzLnN1cGFiYXNlSGVhbHRoLmlzSGVhbHRoeSgnZGF0YWJhc2UnKSxcbiAgICAgICgpID0+IHRoaXMucmVkaXNIZWFsdGguaXNIZWFsdGh5KCdyZWRpcycpLFxuICAgIF0pO1xuICB9XG5cbiAgQEdldCgnbGl2ZW5lc3MnKVxuICBsaXZlbmVzcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiAnb2snLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgfTtcbiAgfVxufVxuIl0sInZlcnNpb24iOjN9