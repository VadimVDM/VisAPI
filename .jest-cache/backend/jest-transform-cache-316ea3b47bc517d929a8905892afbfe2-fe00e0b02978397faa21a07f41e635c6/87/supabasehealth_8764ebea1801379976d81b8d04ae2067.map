{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/health/indicators/supabase.health.ts","mappings":";;;;;AAAA,2CAA4C;AAC5C,+CAI0B;AAC1B,yDAAwD;AAGjD,IAAM,uBAAuB,GAA7B,MAAM,uBAAwB,SAAQ,0BAAe;IAC1D,YAA6B,QAAyB;QACpD,KAAK,EAAE,CAAC;QADmB,aAAQ,GAAR,QAAQ,CAAiB;IAEtD,CAAC;IAEK,SAAS,CAAC,GAAW;;YACzB,IAAI,CAAC;gBACH,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC;gBAE1D,IAAI,WAAW,EAAE,CAAC;oBAChB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACnC,CAAC;gBAED,MAAM,IAAI,2BAAgB,CACxB,4BAA4B,EAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAC3B,CAAC;YACJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,MAAM,IAAI,2BAAgB,CACxB,4BAA4B,EAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAC3B,CAAC;YACJ,CAAC;QACH,CAAC;KAAA;CACF,CAAA;AAxBY,0DAAuB;kCAAvB,uBAAuB;IADnC,IAAA,mBAAU,GAAE;iEAE4B,+BAAe,oBAAf,+BAAe;GAD3C,uBAAuB,CAwBnC","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/health/indicators/supabase.health.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport {\n  HealthIndicator,\n  HealthIndicatorResult,\n  HealthCheckError,\n} from '@nestjs/terminus';\nimport { SupabaseService } from '@visapi/core-supabase';\n\n@Injectable()\nexport class SupabaseHealthIndicator extends HealthIndicator {\n  constructor(private readonly supabase: SupabaseService) {\n    super();\n  }\n\n  async isHealthy(key: string): Promise<HealthIndicatorResult> {\n    try {\n      const isConnected = await this.supabase.checkConnection();\n\n      if (isConnected) {\n        return this.getStatus(key, true);\n      }\n\n      throw new HealthCheckError(\n        'Supabase connection failed',\n        this.getStatus(key, false)\n      );\n    } catch (error) {\n      throw new HealthCheckError(\n        'Supabase connection failed',\n        this.getStatus(key, false)\n      );\n    }\n  }\n}\n"],"version":3}