{"file":"/Users/vadim/Projects/VisAPI/libs/backend/util-redis/src/lib/redis.service.ts","mappings":";;;;;AAAA,2CAA4C;AAC5C,qCAAgC;AAChC,qDAAoD;AAG7C,IAAM,YAAY,GAAlB,MAAM,YAAY;IAGvB,YAA6B,MAAqB;QAArB,WAAM,GAAN,MAAM,CAAe;QAChD,IAAI,CAAC,KAAK,GAAG,IAAI,eAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC3C,oBAAoB,EAAE,CAAC;YACvB,WAAW,EAAE,IAAI;SAClB,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAEK,eAAe;;YACnB,IAAI,CAAC;gBACH,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACzB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;gBACxB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;gBACxC,OAAO,YAAY,GAAG,IAAI,CAAC,CAAC,gCAAgC;YAC9D,CAAC;YAAC,WAAM,CAAC;gBACP,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;KAAA;IAEK,UAAU;;YACd,MAAM,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;QAChC,CAAC;KAAA;CACF,CAAA;AA5BY,oCAAY;uBAAZ,YAAY;IADxB,IAAA,mBAAU,GAAE;iEAI0B,2BAAa,oBAAb,2BAAa;GAHvC,YAAY,CA4BxB","names":[],"sources":["/Users/vadim/Projects/VisAPI/libs/backend/util-redis/src/lib/redis.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { Redis } from 'ioredis';\nimport { ConfigService } from '@visapi/core-config';\n\n@Injectable()\nexport class RedisService {\n  private redis: Redis;\n\n  constructor(private readonly config: ConfigService) {\n    this.redis = new Redis(this.config.redisUrl, {\n      maxRetriesPerRequest: 3,\n      lazyConnect: true,\n    });\n  }\n\n  getClient(): Redis {\n    return this.redis;\n  }\n\n  async checkConnection(): Promise<boolean> {\n    try {\n      const start = Date.now();\n      await this.redis.ping();\n      const responseTime = Date.now() - start;\n      return responseTime < 1000; // Consider healthy if ping < 1s\n    } catch {\n      return false;\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    await this.redis.disconnect();\n  }\n}\n"],"version":3}