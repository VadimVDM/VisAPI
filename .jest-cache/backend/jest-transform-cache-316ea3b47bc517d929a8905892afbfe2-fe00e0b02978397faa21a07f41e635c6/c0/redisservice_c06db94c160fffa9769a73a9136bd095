d24c7371ccf06c53110588e297edda41
"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedisService = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@nestjs/common");
const ioredis_1 = require("ioredis");
const core_config_1 = require("@visapi/core-config");
let RedisService = class RedisService {
    constructor(config) {
        this.config = config;
        this.redis = new ioredis_1.Redis(this.config.redisUrl, {
            maxRetriesPerRequest: 3,
            lazyConnect: true,
        });
    }
    getClient() {
        return this.redis;
    }
    checkConnection() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                const start = Date.now();
                yield this.redis.ping();
                const responseTime = Date.now() - start;
                return responseTime < 1000; // Consider healthy if ping < 1s
            }
            catch (_a) {
                return false;
            }
        });
    }
    disconnect() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            yield this.redis.disconnect();
        });
    }
};
exports.RedisService = RedisService;
exports.RedisService = RedisService = tslib_1.__decorate([
    (0, common_1.Injectable)(),
    tslib_1.__metadata("design:paramtypes", [typeof (_a = typeof core_config_1.ConfigService !== "undefined" && core_config_1.ConfigService) === "function" ? _a : Object])
], RedisService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3ZhZGltL1Byb2plY3RzL1Zpc0FQSS9saWJzL2JhY2tlbmQvdXRpbC1yZWRpcy9zcmMvbGliL3JlZGlzLnNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSwyQ0FBNEM7QUFDNUMscUNBQWdDO0FBQ2hDLHFEQUFvRDtBQUc3QyxJQUFNLFlBQVksR0FBbEIsTUFBTSxZQUFZO0lBR3ZCLFlBQTZCLE1BQXFCO1FBQXJCLFdBQU0sR0FBTixNQUFNLENBQWU7UUFDaEQsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRTtZQUMzQyxvQkFBb0IsRUFBRSxDQUFDO1lBQ3ZCLFdBQVcsRUFBRSxJQUFJO1NBQ2xCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFSyxlQUFlOztZQUNuQixJQUFJLENBQUM7Z0JBQ0gsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO2dCQUN6QixNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7Z0JBQ3hCLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxLQUFLLENBQUM7Z0JBQ3hDLE9BQU8sWUFBWSxHQUFHLElBQUksQ0FBQyxDQUFDLGdDQUFnQztZQUM5RCxDQUFDO1lBQUMsV0FBTSxDQUFDO2dCQUNQLE9BQU8sS0FBSyxDQUFDO1lBQ2YsQ0FBQztRQUNILENBQUM7S0FBQTtJQUVLLFVBQVU7O1lBQ2QsTUFBTSxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDO1FBQ2hDLENBQUM7S0FBQTtDQUNGLENBQUE7QUE1Qlksb0NBQVk7dUJBQVosWUFBWTtJQUR4QixJQUFBLG1CQUFVLEdBQUU7aUVBSTBCLDJCQUFhLG9CQUFiLDJCQUFhO0dBSHZDLFlBQVksQ0E0QnhCIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy92YWRpbS9Qcm9qZWN0cy9WaXNBUEkvbGlicy9iYWNrZW5kL3V0aWwtcmVkaXMvc3JjL2xpYi9yZWRpcy5zZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAbmVzdGpzL2NvbW1vbic7XG5pbXBvcnQgeyBSZWRpcyB9IGZyb20gJ2lvcmVkaXMnO1xuaW1wb3J0IHsgQ29uZmlnU2VydmljZSB9IGZyb20gJ0B2aXNhcGkvY29yZS1jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUmVkaXNTZXJ2aWNlIHtcbiAgcHJpdmF0ZSByZWRpczogUmVkaXM7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBjb25maWc6IENvbmZpZ1NlcnZpY2UpIHtcbiAgICB0aGlzLnJlZGlzID0gbmV3IFJlZGlzKHRoaXMuY29uZmlnLnJlZGlzVXJsLCB7XG4gICAgICBtYXhSZXRyaWVzUGVyUmVxdWVzdDogMyxcbiAgICAgIGxhenlDb25uZWN0OiB0cnVlLFxuICAgIH0pO1xuICB9XG5cbiAgZ2V0Q2xpZW50KCk6IFJlZGlzIHtcbiAgICByZXR1cm4gdGhpcy5yZWRpcztcbiAgfVxuXG4gIGFzeW5jIGNoZWNrQ29ubmVjdGlvbigpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3Qgc3RhcnQgPSBEYXRlLm5vdygpO1xuICAgICAgYXdhaXQgdGhpcy5yZWRpcy5waW5nKCk7XG4gICAgICBjb25zdCByZXNwb25zZVRpbWUgPSBEYXRlLm5vdygpIC0gc3RhcnQ7XG4gICAgICByZXR1cm4gcmVzcG9uc2VUaW1lIDwgMTAwMDsgLy8gQ29uc2lkZXIgaGVhbHRoeSBpZiBwaW5nIDwgMXNcbiAgICB9IGNhdGNoIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBkaXNjb25uZWN0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgIGF3YWl0IHRoaXMucmVkaXMuZGlzY29ubmVjdCgpO1xuICB9XG59XG4iXSwidmVyc2lvbiI6M30=