{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/api-keys/dto/api-key-response.dto.ts","mappings":";;;;AAAA,6CAA8C;AAG9C,MAAa,iBAAiB;IA4D5B;;OAEG;IACH,MAAM,CAAC,UAAU,CAAC,MAAoB;QACpC,MAAM,EACJ,UAAU,EAAM,uBAAuB;QACvC,aAAa,KAEX,MAAM,EAFQ,0BAA0B;QACvC,UAAU,kBACX,MAAM,EAJJ,+BAIL,CAAS,CAAC;QAEX,OAAO,UAA+B,CAAC;IACzC,CAAC;CACF;AAxED,8CAwEC;AAnEC;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,mCAAmC;QAChD,OAAO,EAAE,sCAAsC;KAChD,CAAC;;6CACS;AAMX;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oCAAoC;QACjD,OAAO,EAAE,oBAAoB;KAC9B,CAAC;;+CACW;AAOb;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,oDAAoD;QACjE,OAAO,EAAE,eAAe;QACxB,QAAQ,EAAE,IAAI;KACf,CAAC;;iDACoB;AAOtB;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,4BAA4B;QACzC,OAAO,EAAE,CAAC,gBAAgB,EAAE,kBAAkB,CAAC;QAC/C,OAAO,EAAE,IAAI;KACd,CAAC;;iDACe;AAOjB;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,yCAAyC;QACtD,OAAO,EAAE,0BAA0B;QACnC,QAAQ,EAAE,IAAI;KACf,CAAC;;qDACwB;AAO1B;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,8BAA8B;QAC3C,OAAO,EAAE,UAAU;QACnB,QAAQ,EAAE,IAAI;KACf,CAAC;;qDACwB;AAM1B;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,uCAAuC;QACpD,OAAO,EAAE,0BAA0B;KACpC,CAAC;;qDACiB;AAOnB;IALC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,yCAAyC;QACtD,OAAO,EAAE,0BAA0B;QACnC,QAAQ,EAAE,IAAI;KACf,CAAC;;uDAC0B;AAM5B;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,0CAA0C;QACvD,OAAO,EAAE,0BAA0B;KACpC,CAAC;;qDACiB;AAgBrB,MAAa,2BAA4B,SAAQ,iBAAiB;IAahE;;OAEG;IACH,MAAM,CAAC,iBAAiB,CACtB,MAAoB,EACpB,GAAW,EACX,UAAkB,qDAAqD;QAEvE,MAAM,YAAY,GAAG,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1D,uCACK,YAAY,KACf,GAAG;YACH,OAAO,IACP;IACJ,CAAC;CACF;AA5BD,kEA4BC;AAvBC;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,wDAAwD;QACrE,OAAO,EAAE,gDAAgD;KAC1D,CAAC;;wDACU;AAMZ;IAJC,IAAA,qBAAW,EAAC;QACX,WAAW,EAAE,+BAA+B;QAC5C,OAAO,EAAE,qDAAqD;KAC/D,CAAC;;4DACc","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/api-keys/dto/api-key-response.dto.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\nimport type { ApiKeyRecord } from '@visapi/shared-types';\n\nexport class ApiKeyResponseDto {\n  @ApiProperty({\n    description: 'Unique identifier for the API key',\n    example: 'afe8c3a7-3b1d-4c9f-8e2a-1b2c3d4e5f6g',\n  })\n  id: string;\n\n  @ApiProperty({\n    description: 'Name or description of the API key',\n    example: 'Production API Key',\n  })\n  name: string;\n\n  @ApiProperty({\n    description: 'Key prefix for identification (first 8 characters)',\n    example: 'vapi_12345678',\n    nullable: true,\n  })\n  prefix: string | null;\n\n  @ApiProperty({\n    description: 'Array of permission scopes',\n    example: ['workflows:read', 'workflows:create'],\n    isArray: true,\n  })\n  scopes: string[];\n\n  @ApiProperty({\n    description: 'Expiration timestamp in ISO 8601 format',\n    example: '2024-12-31T23:59:59.999Z',\n    nullable: true,\n  })\n  expires_at: string | null;\n\n  @ApiProperty({\n    description: 'User ID who created this key',\n    example: 'user-123',\n    nullable: true,\n  })\n  created_by: string | null;\n\n  @ApiProperty({\n    description: 'Creation timestamp in ISO 8601 format',\n    example: '2024-01-01T00:00:00.000Z',\n  })\n  created_at: string;\n\n  @ApiProperty({\n    description: 'Last usage timestamp in ISO 8601 format',\n    example: '2024-01-15T12:30:45.123Z',\n    nullable: true,\n  })\n  last_used_at: string | null;\n\n  @ApiProperty({\n    description: 'Last update timestamp in ISO 8601 format',\n    example: '2024-01-15T12:30:45.123Z',\n  })\n  updated_at: string;\n\n  /**\n   * Creates a response DTO from an API key record, excluding sensitive fields\n   */\n  static fromRecord(record: ApiKeyRecord): ApiKeyResponseDto {\n    const {\n      hashed_key,     // Exclude legacy field\n      hashed_secret,  // Exclude sensitive field\n      ...safeFields\n    } = record;\n\n    return safeFields as ApiKeyResponseDto;\n  }\n}\n\nexport class ApiKeyWithSecretResponseDto extends ApiKeyResponseDto {\n  @ApiProperty({\n    description: 'The raw API key secret (only shown once upon creation)',\n    example: 'vapi_12345678_abcdef1234567890abcdef1234567890',\n  })\n  key: string;\n\n  @ApiProperty({\n    description: 'Security notice about the key',\n    example: 'Save this key securely. It will not be shown again.',\n  })\n  message: string;\n\n  /**\n   * Creates a response DTO with the raw key (for creation response only)\n   */\n  static fromRecordWithKey(\n    record: ApiKeyRecord,\n    key: string,\n    message: string = 'Save this key securely. It will not be shown again.'\n  ): ApiKeyWithSecretResponseDto {\n    const baseResponse = ApiKeyResponseDto.fromRecord(record);\n    return {\n      ...baseResponse,\n      key,\n      message,\n    };\n  }\n}"],"version":3}