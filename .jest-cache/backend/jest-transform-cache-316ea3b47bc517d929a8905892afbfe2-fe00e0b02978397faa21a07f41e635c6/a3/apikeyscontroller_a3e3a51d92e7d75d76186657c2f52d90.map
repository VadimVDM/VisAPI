{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/api-keys/api-keys.controller.ts","mappings":";;;;;AAAA,2CASwB;AACxB,uDAAmD;AACnD,gEAA2D;AAC3D,0EAA6D;AAC7D,iEAA2D;AAC3D,qEAGoC;AACpC,6CAKyB;AAMlB,IAAM,iBAAiB,GAAvB,MAAM,iBAAiB;IAC5B,YAA6B,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAUnD,WAAW,CAAY,GAAQ;;YACnC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAClD,OAAO,IAAI,CAAC,GAAG,CAAC,wCAAiB,CAAC,UAAU,CAAC,CAAC;QAChD,CAAC;KAAA;IAUK,YAAY,CACR,GAAoB,EACjB,GAAQ;;YAEnB,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CACzD,GAAG,CAAC,IAAI,EACR,GAAG,CAAC,MAAM,EACV,GAAG,CAAC,MAAM,CAAC,UAAU,IAAI,QAAQ,CAClC,CAAC;YAEF,OAAO,kDAA2B,CAAC,iBAAiB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACpE,CAAC;KAAA;IAMK,YAAY,CAAc,EAAU;;YACxC,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACxC,OAAO,EAAE,OAAO,EAAE,8BAA8B,EAAE,CAAC;QACrD,CAAC;KAAA;CACF,CAAA;AA7CY,8CAAiB;AAWtB;IARL,IAAA,YAAG,GAAE;IACL,IAAA,yBAAM,EAAC,WAAW,CAAC;IACnB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;IAC9C,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,2BAA2B;QACxC,IAAI,EAAE,CAAC,wCAAiB,CAAC;KAC1B,CAAC;IACiB,mBAAA,IAAA,gBAAO,GAAE,CAAA;;;gEAAY,OAAO,oBAAP,OAAO;oDAG9C;AAUK;IARL,IAAA,aAAI,GAAE;IACN,IAAA,yBAAM,EAAC,aAAa,CAAC;IACrB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC;IACjD,IAAA,qBAAW,EAAC;QACX,MAAM,EAAE,GAAG;QACX,WAAW,EAAE,yCAAyC;QACtD,IAAI,EAAE,kDAA2B;KAClC,CAAC;IAEC,mBAAA,IAAA,aAAI,GAAE,CAAA;IACN,mBAAA,IAAA,gBAAO,GAAE,CAAA;;iEADG,oCAAe,oBAAf,oCAAe;gEAE3B,OAAO,oBAAP,OAAO;qDAQT;AAMK;IAJL,IAAA,eAAM,EAAC,KAAK,CAAC;IACb,IAAA,yBAAM,EAAC,aAAa,CAAC;IACrB,IAAA,sBAAY,EAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC;IAC9C,IAAA,qBAAW,EAAC,EAAE,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,0BAA0B,EAAE,CAAC;IAClD,mBAAA,IAAA,cAAK,EAAC,IAAI,CAAC,CAAA;;;;qDAG9B;4BA5CU,iBAAiB;IAJ7B,IAAA,iBAAO,EAAC,UAAU,CAAC;IACnB,IAAA,mBAAU,EAAC,iBAAiB,CAAC;IAC7B,IAAA,kBAAS,EAAC,2BAAW,CAAC;IACtB,IAAA,qBAAW,EAAC,SAAS,CAAC;iEAEqB,0BAAW,oBAAX,0BAAW;GAD1C,iBAAiB,CA6C7B","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/api-keys/api-keys.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Get,\n  Post,\n  Delete,\n  Body,\n  Param,\n  UseGuards,\n  Request,\n} from '@nestjs/common';\nimport { AuthService } from '../auth/auth.service';\nimport { ApiKeyGuard } from '../auth/guards/api-key.guard';\nimport { Scopes } from '../auth/decorators/scopes.decorator';\nimport { CreateApiKeyDto } from './dto/create-api-key.dto';\nimport {\n  ApiKeyResponseDto,\n  ApiKeyWithSecretResponseDto,\n} from './dto/api-key-response.dto';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiSecurity,\n} from '@nestjs/swagger';\n\n@ApiTags('API Keys')\n@Controller('api/v1/api-keys')\n@UseGuards(ApiKeyGuard)\n@ApiSecurity('api-key')\nexport class ApiKeysController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Get()\n  @Scopes('keys:read')\n  @ApiOperation({ summary: 'List all API keys' })\n  @ApiResponse({\n    status: 200,\n    description: 'Returns array of API keys',\n    type: [ApiKeyResponseDto],\n  })\n  async listApiKeys(@Request() req: any): Promise<ApiKeyResponseDto[]> {\n    const keys = await this.authService.listApiKeys();\n    return keys.map(ApiKeyResponseDto.fromRecord);\n  }\n\n  @Post()\n  @Scopes('keys:create')\n  @ApiOperation({ summary: 'Create a new API key' })\n  @ApiResponse({\n    status: 201,\n    description: 'Returns the created API key with secret',\n    type: ApiKeyWithSecretResponseDto,\n  })\n  async createApiKey(\n    @Body() dto: CreateApiKeyDto,\n    @Request() req: any\n  ): Promise<ApiKeyWithSecretResponseDto> {\n    const { key, apiKey } = await this.authService.createApiKey(\n      dto.name,\n      dto.scopes,\n      req.apiKey.created_by || 'system'\n    );\n\n    return ApiKeyWithSecretResponseDto.fromRecordWithKey(apiKey, key);\n  }\n\n  @Delete(':id')\n  @Scopes('keys:delete')\n  @ApiOperation({ summary: 'Revoke an API key' })\n  @ApiResponse({ status: 204, description: 'Key successfully revoked' })\n  async revokeApiKey(@Param('id') id: string) {\n    await this.authService.revokeApiKey(id);\n    return { message: 'API key revoked successfully' };\n  }\n}\n"],"version":3}