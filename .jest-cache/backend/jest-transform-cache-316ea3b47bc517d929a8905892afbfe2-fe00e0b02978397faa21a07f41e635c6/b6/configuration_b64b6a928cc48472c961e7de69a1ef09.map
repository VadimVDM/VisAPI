{"file":"/Users/vadim/Projects/VisAPI/libs/backend/core-config/src/lib/configuration.ts","mappings":";;AAAA,kBAAe,GAAG,EAAE;;IAAC,OAAA,CAAC;QACpB,IAAI,EAAE;YACJ,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,aAAa;SAC3C;QACD,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,IAAI;QAC5C,IAAI,EAAE;YACJ,MAAM,EAAE,CAAA,MAAA,OAAO,CAAC,GAAG,CAAC,WAAW,0CAAE,KAAK,CAAC,GAAG,CAAC,KAAI,CAAC,uBAAuB,CAAC;SACzE;QACD,QAAQ,EAAE;YACR,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;SAC9B;QACD,KAAK,EAAE;YACL,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;SAC3B;QACD,QAAQ,EAAE;YACR,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,wBAAwB;YACrE,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,yBAAyB;YACrD,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,OAAO,CAAC,GAAG,CAAC,6BAA6B;SACpF;QACD,IAAI,EAAE;YACJ,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU;YACjC,YAAY,EAAE,OAAO,CAAC,GAAG,CAAC,cAAc,IAAI,SAAS;YACrD,gBAAgB,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,IAAI,EAAE;SACtE;QACD,SAAS,EAAE;YACT,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,EAAE,CAAC,IAAI,GAAG;YAC5D,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,EAAE,CAAC,IAAI,CAAC;SACnE;QACD,KAAK,EAAE;YACL,WAAW,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,IAAI,EAAE;YAC9D,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,IAAI,CAAC;YAC5D,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,IAAI,IAAI;SAChE;QACD,OAAO,EAAE;YACP,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,OAAO;YACvC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,MAAM;SACzC;QACD,GAAG,EAAE;YACH,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,mCAAmC;YACtE,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,EAAE;YACrC,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,IAAI,KAAK;YACvD,aAAa,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,CAAC,IAAI,CAAC;YAChE,YAAY,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,IAAI,IAAI;SAClE;KACF,CAAC,CAAA;CAAA,CAAC","names":[],"sources":["/Users/vadim/Projects/VisAPI/libs/backend/core-config/src/lib/configuration.ts"],"sourcesContent":["export default () => ({\n  node: {\n    env: process.env.NODE_ENV || 'development',\n  },\n  port: parseInt(process.env.PORT, 10) || 3000,\n  cors: {\n    origin: process.env.CORS_ORIGIN?.split(',') || ['http://localhost:3001'],\n  },\n  database: {\n    url: process.env.DATABASE_URL,\n  },\n  redis: {\n    url: process.env.REDIS_URL,\n  },\n  supabase: {\n    url: process.env.SUPABASE_URL || process.env.NEXT_PUBLIC_SUPABASE_URL,\n    serviceRoleKey: process.env.SUPABASE_SERVICE_ROLE_KEY,\n    anonKey: process.env.SUPABASE_ANON_KEY || process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  },\n  auth: {\n    jwtSecret: process.env.JWT_SECRET,\n    apiKeyPrefix: process.env.API_KEY_PREFIX || 'visapi_',\n    apiKeyExpiryDays: parseInt(process.env.API_KEY_EXPIRY_DAYS, 10) || 90,\n  },\n  rateLimit: {\n    burst: parseInt(process.env.API_RATE_LIMIT_BURST, 10) || 200,\n    sustained: parseInt(process.env.API_RATE_LIMIT_SUSTAINED, 10) || 2,\n  },\n  queue: {\n    concurrency: parseInt(process.env.QUEUE_CONCURRENCY, 10) || 10,\n    maxRetries: parseInt(process.env.QUEUE_MAX_RETRIES, 10) || 3,\n    retryDelay: parseInt(process.env.QUEUE_RETRY_DELAY, 10) || 5000,\n  },\n  logging: {\n    level: process.env.LOG_LEVEL || 'debug',\n    format: process.env.LOG_FORMAT || 'json',\n  },\n  cgb: {\n    apiUrl: process.env.CGB_API_URL || 'https://app.chatgptbuilder.io/api',\n    apiKey: process.env.CGB_API_KEY || '',\n    timeout: parseInt(process.env.CGB_TIMEOUT, 10) || 30000,\n    retryAttempts: parseInt(process.env.CGB_RETRY_ATTEMPTS, 10) || 3,\n    cacheTimeout: parseInt(process.env.CGB_CACHE_TIMEOUT, 10) || 3600,\n  },\n});\n"],"version":3}