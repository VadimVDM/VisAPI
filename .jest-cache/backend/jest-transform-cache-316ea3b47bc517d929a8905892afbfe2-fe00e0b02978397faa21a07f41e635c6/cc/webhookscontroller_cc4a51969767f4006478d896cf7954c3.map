{"file":"/Users/vadim/Projects/VisAPI/apps/backend/src/webhooks/webhooks.controller.ts","mappings":"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","names":[],"sources":["/Users/vadim/Projects/VisAPI/apps/backend/src/webhooks/webhooks.controller.ts"],"sourcesContent":["import {\n  Controller,\n  Post,\n  Body,\n  Param,\n  Headers,\n  HttpCode,\n  HttpStatus,\n  BadRequestException,\n  PayloadTooLargeException,\n  UseGuards,\n} from '@nestjs/common';\nimport { QueueService } from '../queue/queue.service';\nimport { QUEUE_NAMES, JOB_NAMES } from '@visapi/shared-types';\nimport { IdempotencyService } from '@visapi/util-redis';\nimport { ApiKeyGuard } from '../auth/guards/api-key.guard';\nimport { Scopes } from '../auth/decorators/scopes.decorator';\nimport {\n  ApiTags,\n  ApiOperation,\n  ApiResponse,\n  ApiSecurity,\n  ApiHeader,\n} from '@nestjs/swagger';\n\n@ApiTags('Webhooks')\n@Controller('api/v1/triggers')\nexport class WebhooksController {\n  private readonly MAX_PAYLOAD_SIZE = 512 * 1024; // 512KB\n\n  constructor(\n    private readonly queueService: QueueService,\n    private readonly idempotencyService: IdempotencyService\n  ) {}\n\n  @Post(':key')\n  @UseGuards(ApiKeyGuard)\n  @Scopes('triggers:create')\n  @HttpCode(HttpStatus.ACCEPTED)\n  @ApiOperation({ summary: 'Trigger a workflow via webhook' })\n  @ApiSecurity('api-key')\n  @ApiHeader({\n    name: 'Idempotency-Key',\n    description: 'Optional key to prevent duplicate processing',\n    required: false,\n  })\n  @ApiResponse({ status: 202, description: 'Webhook accepted for processing' })\n  @ApiResponse({ status: 400, description: 'Invalid request' })\n  @ApiResponse({ status: 413, description: 'Payload too large' })\n  async handleWebhook(\n    @Param('key') webhookKey: string,\n    @Body() payload: any,\n    @Headers('idempotency-key') idempotencyKey?: string,\n    @Headers('content-type') contentType?: string\n  ) {\n    // Validate content type\n    if (\n      contentType &&\n      !contentType.includes('application/json') &&\n      !contentType.includes('application/x-www-form-urlencoded')\n    ) {\n      throw new BadRequestException(\n        'Unsupported content type. Use application/json or application/x-www-form-urlencoded'\n      );\n    }\n\n    // Check payload size (this is a simplified check)\n    const payloadSize = JSON.stringify(payload).length;\n    if (payloadSize > this.MAX_PAYLOAD_SIZE) {\n      throw new PayloadTooLargeException('Payload exceeds 512KB limit');\n    }\n\n    // Require idempotency key for webhook requests\n    if (!idempotencyKey) {\n      throw new BadRequestException('Idempotency-Key header is required');\n    }\n\n    // Handle idempotency using Redis-based service\n    return this.idempotencyService.checkAndExecute(\n      idempotencyKey,\n      async () => {\n        // Add job to queue\n        const job = await this.queueService.addJob(\n          QUEUE_NAMES.DEFAULT,\n          JOB_NAMES.PROCESS_WORKFLOW,\n          {\n            webhookKey,\n            payload,\n            receivedAt: new Date().toISOString(),\n            idempotencyKey,\n          }\n        );\n\n        return {\n          status: 'accepted',\n          jobId: job.id,\n          message: 'Webhook received and queued for processing',\n        };\n      },\n      3600 // 1 hour TTL\n    );\n  }\n}\n"],"version":3}