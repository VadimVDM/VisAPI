{"file":"/Users/vadim/Projects/VisAPI/libs/shared/types/src/lib/workflow.types.ts","mappings":";AAAA,yBAAyB","names":[],"sources":["/Users/vadim/Projects/VisAPI/libs/shared/types/src/lib/workflow.types.ts"],"sourcesContent":["// Workflow related types\n\nexport interface WorkflowTrigger {\n  type: 'webhook' | 'cron' | 'manual';\n  config: {\n    schedule?: string; // For cron triggers\n    endpoint?: string; // For webhook triggers\n    [key: string]: any;\n  };\n}\n\nexport interface WorkflowStep {\n  id: string;\n  type:\n    | 'slack.send'\n    | 'whatsapp.send'\n    | 'pdf.generate'\n    | 'email.send'\n    | 'delay';\n  config: {\n    template?: string;\n    channel?: string;\n    recipient?: string;\n    duration?: number; // For delay steps\n    [key: string]: any;\n  };\n  retries?: number;\n  timeout?: number;\n}\n\nexport interface WorkflowSchema {\n  id: string;\n  name: string;\n  description?: string;\n  triggers: WorkflowTrigger[];\n  steps: WorkflowStep[];\n  variables?: {\n    [key: string]: any;\n  };\n  enabled: boolean;\n}\n\nexport interface WorkflowExecution {\n  id: string;\n  workflowId: string;\n  status: 'pending' | 'running' | 'completed' | 'failed' | 'cancelled';\n  startedAt: string;\n  completedAt?: string;\n  input?: any;\n  output?: any;\n  error?: string;\n  steps: WorkflowExecutionStep[];\n}\n\nexport interface WorkflowExecutionStep {\n  stepId: string;\n  status: 'pending' | 'running' | 'completed' | 'failed' | 'skipped';\n  startedAt?: string;\n  completedAt?: string;\n  input?: any;\n  output?: any;\n  error?: string;\n  retryCount: number;\n}\n\n// Job priorities\nexport type JobPriority = 'critical' | 'default' | 'bulk';\n\n// Job status\nexport type JobStatus =\n  | 'waiting'\n  | 'active'\n  | 'completed'\n  | 'failed'\n  | 'delayed'\n  | 'paused';\n\nexport interface JobInfo {\n  id: string;\n  name: string;\n  data: any;\n  priority: JobPriority;\n  status: JobStatus;\n  progress?: number;\n  createdAt: string;\n  processedAt?: string;\n  finishedAt?: string;\n  error?: string;\n  attempts: number;\n  maxAttempts: number;\n}\n\n// Grafana webhook types\nexport interface GrafanaAlert {\n  id: number;\n  uid: string;\n  title: string;\n  state: 'alerting' | 'ok' | 'no_data' | 'paused' | 'pending';\n  evalMatches: Array<{\n    value: number;\n    metric: string;\n    tags: Record<string, string>;\n  }>;\n  executionError: string;\n  noDataFound: boolean;\n  message: string;\n  ruleId: number;\n  ruleName: string;\n  ruleUrl: string;\n  dashboardId: number;\n  panelId: number;\n  tags: Record<string, string>;\n  imageUrl?: string;\n}\n\nexport interface GrafanaWebhookPayload {\n  dashboardId: number;\n  evalMatches: Array<{\n    value: number;\n    metric: string;\n    tags: Record<string, string>;\n  }>;\n  message: string;\n  orgId: number;\n  panelId: number;\n  ruleId: number;\n  ruleName: string;\n  ruleUrl: string;\n  state: 'alerting' | 'ok' | 'no_data' | 'paused' | 'pending';\n  tags: Record<string, string>;\n  title: string;\n  imageUrl?: string;\n  alerts?: GrafanaAlert[];\n}\n\nexport interface SlackMessage {\n  channel?: string;\n  username?: string;\n  icon_emoji?: string;\n  icon_url?: string;\n  text?: string;\n  attachments?: SlackAttachment[];\n  blocks?: SlackBlock[];\n}\n\nexport interface SlackAttachment {\n  color?: string;\n  pretext?: string;\n  author_name?: string;\n  author_link?: string;\n  author_icon?: string;\n  title?: string;\n  title_link?: string;\n  text?: string;\n  fields?: SlackField[];\n  image_url?: string;\n  thumb_url?: string;\n  footer?: string;\n  footer_icon?: string;\n  ts?: number;\n  mrkdwn_in?: string[];\n}\n\nexport interface SlackField {\n  title: string;\n  value: string;\n  short?: boolean;\n}\n\nexport interface SlackBlock {\n  type: string;\n  text?: {\n    type: string;\n    text: string;\n  };\n  elements?: any[];\n  accessory?: any;\n}\n"],"version":3}