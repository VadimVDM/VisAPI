{"file":"/Users/vadim/Projects/VisAPI/libs/shared/types/src/lib/database.types.ts","mappings":"","names":[],"sources":["/Users/vadim/Projects/VisAPI/libs/shared/types/src/lib/database.types.ts"],"sourcesContent":["// Database types shared between frontend and backend\nexport type Database = {\n  public: {\n    Tables: {\n      users: {\n        Row: {\n          id: string;\n          email: string;\n          role: 'viewer' | 'operator' | 'admin';\n          auth_user_id: string | null;\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          email: string;\n          role?: 'viewer' | 'operator' | 'admin';\n          auth_user_id?: string | null;\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          email?: string;\n          role?: 'viewer' | 'operator' | 'admin';\n          auth_user_id?: string | null;\n          created_at?: string;\n          updated_at?: string;\n        };\n      };\n      api_keys: {\n        Row: {\n          id: string;\n          name: string;\n          hashed_key: string; // Legacy field, will be deprecated\n          prefix: string | null;\n          hashed_secret: string | null;\n          scopes: string[];\n          expires_at: string | null;\n          created_by: string | null;\n          created_at: string;\n          last_used_at: string | null;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          name: string;\n          hashed_key?: string; // Legacy field, will be deprecated\n          prefix?: string | null;\n          hashed_secret?: string | null;\n          scopes?: string[];\n          expires_at?: string | null;\n          created_by?: string | null;\n          created_at?: string;\n          last_used_at?: string | null;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          name?: string;\n          hashed_key?: string; // Legacy field, will be deprecated\n          prefix?: string | null;\n          hashed_secret?: string | null;\n          scopes?: string[];\n          expires_at?: string | null;\n          created_by?: string | null;\n          created_at?: string;\n          last_used_at?: string | null;\n          updated_at?: string;\n        };\n      };\n      workflows: {\n        Row: {\n          id: string;\n          name: string;\n          description: string | null;\n          schema: any;\n          enabled: boolean; // Non-nullable with default true\n          created_at: string;\n          updated_at: string;\n        };\n        Insert: {\n          id?: string;\n          name: string;\n          description?: string | null;\n          schema: any;\n          enabled?: boolean; // Defaults to true\n          created_at?: string;\n          updated_at?: string;\n        };\n        Update: {\n          id?: string;\n          name?: string;\n          description?: string | null;\n          schema?: any;\n          enabled?: boolean;\n          created_at?: string;\n          updated_at?: string;\n        };\n      };\n      logs: {\n        Row: {\n          id: number;\n          level: string;\n          message: string;\n          metadata: any;\n          workflow_id: string | null;\n          job_id: string | null;\n          pii_redacted: boolean;\n          created_at: string;\n        };\n        Insert: {\n          id?: number;\n          level: string;\n          message: string;\n          metadata?: any;\n          workflow_id?: string | null;\n          job_id?: string | null;\n          pii_redacted?: boolean;\n          created_at?: string;\n        };\n        Update: {\n          id?: number;\n          level?: string;\n          message?: string;\n          metadata?: any;\n          workflow_id?: string | null;\n          job_id?: string | null;\n          pii_redacted?: boolean;\n          created_at?: string;\n        };\n      };\n    };\n  };\n};\n\n// Type aliases for convenience\nexport type UserRole = 'viewer' | 'operator' | 'admin';\n\nexport type User = Database['public']['Tables']['users']['Row'];\nexport type ApiKeyRecord = Database['public']['Tables']['api_keys']['Row'];\nexport type WorkflowRecord = Database['public']['Tables']['workflows']['Row'];\nexport type LogRecord = Database['public']['Tables']['logs']['Row'];\n\nexport type InsertUser = Database['public']['Tables']['users']['Insert'];\nexport type InsertApiKey = Database['public']['Tables']['api_keys']['Insert'];\nexport type InsertWorkflow =\n  Database['public']['Tables']['workflows']['Insert'];\nexport type InsertLog = Database['public']['Tables']['logs']['Insert'];\n\nexport type UpdateUser = Database['public']['Tables']['users']['Update'];\nexport type UpdateApiKey = Database['public']['Tables']['api_keys']['Update'];\nexport type UpdateWorkflow =\n  Database['public']['Tables']['workflows']['Update'];\nexport type UpdateLog = Database['public']['Tables']['logs']['Update'];\n"],"version":3}