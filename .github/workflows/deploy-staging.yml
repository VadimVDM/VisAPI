name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel (Staging)
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://app-staging.visanet.app
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}

  deploy-backend:
    name: Deploy Backend to Render (Staging)
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://api-staging.visanet.app
    steps:
      - uses: actions/checkout@v4

      - name: Deploy API Gateway
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_GATEWAY_SERVICE_ID_STAGING }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Deploy Worker
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_WORKER_SERVICE_ID_STAGING }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  health-check:
    name: Health Check
    needs: [deploy-frontend, deploy-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Wait for services to be ready
        run: sleep 60

      - name: Check Backend Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api-staging.visanet.app/api/v1/healthz)
          if [ $response -ne 200 ]; then
            echo "Backend health check failed with status $response"
            exit 1
          fi
          echo "Backend is healthy"

      - name: Check Frontend Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://app-staging.visanet.app)
          if [ $response -ne 200 ]; then
            echo "Frontend health check failed with status $response"
            exit 1
          fi
          echo "Frontend is healthy"

      - name: Run Smoke Tests
        run: |
          # Basic API smoke test
          curl -X GET https://api-staging.visanet.app/api/v1/livez

          # Check queue metrics endpoint
          curl -X GET https://api-staging.visanet.app/api/v1/queue/metrics

  notify:
    name: Notify Deployment
    needs: health-check
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            Staging Deployment ${{ job.status == 'success' && 'completed successfully ✅' || 'failed ❌' }}
            Frontend: https://app-staging.visanet.app
            Backend: https://api-staging.visanet.app
            Commit: ${{ github.sha }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
